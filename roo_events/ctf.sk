# To Do:
# 1. func or var for flag loc (yes but not ness)
# 2. text & sounds (yes)
# 3. flag drop on death, quit, kick, other (maby)

variables:
    # state variables (don't modify)
    {max::team::size} = 0
    {red::flag::taker} = ""
    {green:flag::taker} = ""
    {blue:flag::taker} = ""
    {yellow:flag::taker} = ""
    {red::points} = 0
    {green::points} = 0
    {blue::points} = 0
    {yellow::points} = 0

function team_choosing_spawn() :: object:
    return location(0.5, -54, -20.5, world "ctf")

function red_spawn() :: object:
    return location(12, -56, 12, world "ctf", 135, 0)

function green_spawn() :: object:
    return location(-12, -56, 12, world "ctf", -135, 0)

function blue_spawn() :: object:
    return location(-12, -56, -12, world "ctf", -45, 0)

function yellow_spawn() :: object:
    return location(12, -56, -12, world "ctf", 45, 0)

# rfl = red flag location
function rfl(i: number) :: object:
    set {_x} to 8
    set {_y} to -57
    set {_z} to 8
    set {_name} to "red_banner"
    set {_rotation} to 6
    set {_list::*} to {_x}, {_y}, {_z}, {_name} and {_rotation}

function gfl(i: number) :: object:
    set {_x} to -8
    set {_y} to -57
    set {_z} to 8
    set {_name} to "green_banner"
    set {_rotation} to 10
    set {_list::*} to {_x}, {_y}, {_z}, {_name} and {_rotation}

function bfl(i: number) :: object:
    set {_x} to -8
    set {_y} to -57
    set {_z} to -8
    set {_name} to "blue_banner"
    set {_rotation} to 14
    set {_list::*} to {_x}, {_y}, {_z}, {_name} and {_rotation}

function yfl(i: number) :: object:
    set {_x} to 8
    set {_y} to -57
    set {_z} to -8
    set {_name} to "yellow_banner"
    set {_rotation} to 2
    set {_list::*} to {_x}, {_y}, {_z}, {_name} and {_rotation}

function apply_effect(p: player):
    execute console command "/effect give %{_p}% minecraft:glowing infinite 1 true"

function clear_effect(p: player):
    execute console command "/effect clear %{_p}%"

function set_block_air(x: number, y: number, z: number):
    execute console command "/execute in minecraft:ctf run setblock %{_x}% %{_y}% %{_z}% minecraft:air replace"

function set_block_flag(x: number, y: number, z: number, flag: text, r: number):
    execute console command "/execute in minecraft:ctf run setblock %{_x}% %{_y}% %{_z}% minecraft:%{_flag}%[rotation=%{_r}%] replace"

function remove_player_from_team(p: player):
    remove {_p} from {red::team::*}
    remove {_p} from {green::team::*}
    remove {_p} from {blue::team::*}
    remove {_p} from {yellow::team::*}

function is_on_team(p: player) :: boolean:
    if {red::team::*} contains {_p}:
        return true
    else if {green::team::*} contains {_p}:
        return true
    else if {blue::team::*} contains {_p}:
        return true
    else if {yellow::team::*} contains {_p}:
        return true
    return false

function reset_flag(p: player):
    if {_p} is {red::flag::taker}:
        set {red::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(rfl(1), rfl(2), rfl(3), rfl(4), rfl(5))
    if {_p} is {green::flag::taker}:
        set {green::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(gfl(1), gfl(2), gfl(3), gfl(4), gfl(5))
    if {_p} is {blue::flag::taker}:
        set {blue::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(bfl(1), bfl(2), bfl(3), bfl(4), bfl(5))
    if {_p} is {yellow::flag::taker}:
        set {yellow::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(yfl(1), yfl(2), yfl(3), yfl(4), yfl(5))

function flag_captures(p: player) :: number:
    set {_flag::captures} to 0
    if {_p} is {red::flag::taker}:
        set {red::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(rfl(1), rfl(2), rfl(3), rfl(4), rfl(5))
        add 1 to {_flag::captures}
    if {_p} is {green::flag::taker}:
        set {green::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(gfl(1), gfl(2), gfl(3), gfl(4), gfl(5))
        add 1 to {_flag::captures}
    if {_p} is {blue::flag::taker}:
        set {blue::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(bfl(1), bfl(2), bfl(3), bfl(4), bfl(5))
        add 1 to {_flag::captures}
    if {_p} is {yellow::flag::taker}:
        set {yellow::flag::taker} to ""
        clear_effect({_p})
        set_block_flag(yfl(1), yfl(2), yfl(3), yfl(4), yfl(5))
        add 1 to {_flag::captures}
    return {_flag::captures}

on join:
    while player is online:
        if player is in world "ctf":
            set line 1 of player's scoreboard to "&l&6Yellow: %size of {yellow::team::*}%"
            set line 2 of player's scoreboard to "&l&1Blue: %size of {blue::team::*}%"
            set line 3 of player's scoreboard to "&l&2Green: %size of {green::team::*}%"
            set line 4 of player's scoreboard to "&l&4Red: %size of {red::team::*}%"
            set line 5 of player's scoreboard to "&lTeams Size:"
            set line 6 of player's scoreboard to ""
            set line 7 of player's scoreboard to "&l&6Yellow: %{yellow::points}%"
            set line 8 of player's scoreboard to "&l&1Blue: %{blue::points}%"
            set line 9 of player's scoreboard to "&l&2Green: %{green::points}%"
            set line 10 of player's scoreboard to "&l&4Red: %{red::points}%"
            set line 11 of player's scoreboard to "&lFlags Captured:"
            set line 12 of player's scoreboard to ""
            set line 13 of player's scoreboard to "&lGame Time: 00:00"
            set line 14 of player's scoreboard to ""
            set line 15 of player's scoreboard to "&6&m                              "
            set title of player's scoreboard to "&x&f&f&2&6&2&6&lR&x&f&f&3&a&2&1&lo&x&f&f&4&e&1&6&lo &x&f&f&6&2&1&8&lE&x&f&f&7&7&1&3&lv&x&f&f&8&b&0&e&le&x&f&f&9&f&0&a&ln&x&f&f&b&3&0&5&lt&x&f&f&c&7&0&0&ls"
        wait 1 second

on quit:
    remove_player_from_team(player)
    reset_flag(player)

on region enter:
    set {_temp::list::*} to size of {red::team::*}, size of {green::team::*}, size of {blue::team::*} and size of {yellow::team::*}
    set {_temp::list::*} to sorted {_temp::list::*}
    set {max::team::size} to {_temp::list::4}
    if {_temp::list::1} >= {max::team::size} - 1:
        if {_temp::list::2} >= {max::team::size} - 1:
            if {_temp::list::3} >= {max::team::size} - 1:
                if {_temp::list::4} >= {max::team::size} - 1:
                    add 1 to {max::team::size}
    if "%region%" is "ctf_red_test in world ctf":
        if {red::team::*} contains player:
            teleport player to red_spawn()
        else if size of {red::team::*} < {max::team::size}:
            teleport player to red_spawn()
            remove_player_from_team(player)
            reset_flag(player)
            add player to {red::team::*}
        else:
            teleport player to team_choosing_spawn()
    else if "%region%" is "ctf_green_test in world ctf":
        if {green::team::*} contains player:
            teleport player to green_spawn()
        else if size of {green::team::*} < {max::team::size}:
            teleport player to green_spawn()
            remove_player_from_team(player)
            reset_flag(player)
            add player to {green::team::*}
        else:
            teleport player to team_choosing_spawn()
    else if "%region%" is "ctf_blue_test in world ctf":
        if {blue::team::*} contains player:
            teleport player to blue_spawn()
        else if size of {blue::team::*} < {max::team::size}:
            teleport player to blue_spawn()
            remove_player_from_team(player)
            reset_flag(player)
            add player to {blue::team::*}
        else:
            teleport player to team_choosing_spawn()
    else if "%region%" is "ctf_yellow_test in world ctf":
        if {yellow::team::*} contains player:
            teleport player to yellow_spawn()
        else if size of {yellow::team::*} < {max::team::size}:
            teleport player to yellow_spawn()
            remove_player_from_team(player)
            reset_flag(player)
            add player to {yellow::team::*}
        else:
            teleport player to team_choosing_spawn()

on region enter:
    if "%region%" is "red_flag_test in world ctf":
        if {red::team::*} does not contain player:
            if {red::flag::taker} is "":
                if is_on_team(player) is true:
                    set {red::flag::taker} to player
                    apply_effect(player)
                    set_block_air(8, -57, 8)
        else:
            add flag_captures(player) to {red::points}
    else if "%region%" is "green_flag_test in world ctf":
        if {green::team::*} does not contain player:
            if {green::flag::taker} is "":
                if is_on_team(player) is true:
                    set {green::flag::taker} to player
                    apply_effect(player)
                    set_block_air(-8, -57, 8)
        else:
            add flag_captures(player) to {green::points}
    else if "%region%" is "blue_flag_test in world ctf":
        if {blue::team::*} does not contain player:
            if {blue::flag::taker} is "":
                if is_on_team(player) is true:
                    set {blue::flag::taker} to player
                    apply_effect(player)
                    set_block_air(-8, -57, -8)
        else:
            add flag_captures(player) to {blue::points}
    else if "%region%" is "yellow_flag_test in world ctf":
        if {yellow::team::*} does not contain player:
            if {yellow::flag::taker} is "":
                if is_on_team(player) is true:
                    set {yellow::flag::taker} to player
                    apply_effect(player)
                    set_block_air(8, -57, -8)
        else:
            add flag_captures(player) to {yellow::points}

on damage of player with priority highest:
    if {red::team::*} contains attacker:
        if {red::team::*} contains victim:
            cancel event
    else if {green::team::*} contains attacker:
        if {green::team::*} contains victim:
            cancel event
    else if {blue::team::*} contains attacker:
        if {blue::team::*} contains victim:
            cancel event
    else if {yellow::team::*} contains attacker:
        if {yellow::team::*} contains victim:
            cancel event

on death:
    reset_flag(victim)

on world change:
    reset_flag(player)

on respawn:
    if player is in world "ctf":
        if {red::team::*} contains player:
            set respawn location to red_spawn()
        else if {green::team::*} contains player:
            set respawn location to green_spawn()
        else if {blue::team::*} contains player:
            set respawn location to blue_spawn()
        else if {yellow::team::*} contains player:
            set respawn location to yellow_spawn()

command /drop:
    permission: op
    trigger:
        # red
        fill("ctf", "14", "-54", "14", "10", "-57", "10", "air")
        # green
        fill("ctf", "-14", "-54", "14", "-10", "-57", "10", "air")
        # blue
        fill("ctf", "-10", "-57", "-10", "-14", "-54", "-14", "air")
        # yellow
        fill("ctf", "14", "-54", "-14", "10", "-57", "-10", "air")

command /close:
    permission: op
    trigger:
        # red
        fill("ctf", "14", "-54", "14", "10", "-57", "10", "red_stained_glass")
        fill("ctf", "13", "-54", "13", "11", "-56", "11", "air")
        # green
        fill("ctf", "-14", "-54", "14", "-10", "-57", "10", "green_stained_glass")
        fill("ctf", "-13", "-54", "13", "-11", "-56", "11", "air")
        # blue
        fill("ctf", "-10", "-57", "-10", "-14", "-54", "-14", "blue_stained_glass")
        fill("ctf", "-13", "-54", "-13", "-11", "-56", "-11", "air")
        # yellow
        fill("ctf", "14", "-54", "-14", "10", "-57", "-10", "yellow_stained_glass")
        fill("ctf", "11", "-56", "-11", "13", "-54", "-13", "air")

command /ctfresetteams:
    permission: op
    trigger:
        delete {red::team::*}
        delete {green::team::*}
        delete {blue::team::*}
        delete {yellow::team::*}

command /ctfresetpoints:
    permission: op
    trigger:
        set {red::points} to 0
        set {green::points} to 0
        set {blue::points} to 0
        set {yellow::points} to 0

command /ctfresetflags:
    permission: op
    trigger:
        set {red::flag::taker} to ""
        set {green::flag::taker} to ""
        set {blue::flag::taker} to ""
        set {yellow::flag::taker} to ""

command /ctfresetall:
    permission: op
    trigger:
        delete {red::team::*}
        delete {green::team::*}
        delete {blue::team::*}
        delete {yellow::team::*}
        set {red::points} to 0
        set {green::points} to 0
        set {blue::points} to 0
        set {yellow::points} to 0
        set {red::flag::taker} to ""
        set {green::flag::taker} to ""
        set {blue::flag::taker} to ""
        set {yellow::flag::taker} to ""
